#include "thingProperties.h"  // Make sure this file exists and is uploaded

#include <Adafruit_Keypad.h>

// Define your specific keypad here via PID (uncomment the relevant line)
#define KEYPAD_PID3844  // Example for 4x4 keypad (adjust based on your keypad)

// Define your pins here
// Can ignore ones that don't apply
#define R1 9
#define R2 8
#define R3 7
#define R4 6
#define C1 5
#define C2 4
#define C3 3
#define C4 2

// Leave this import after the above configuration
#if defined(KEYPAD_PID3844)
const byte ROWS = 4; // rows (adjust if your keypad has a different size)
const byte COLS = 4; // columns (adjust if your keypad has a different size)

// Define the symbols on the buttons of the keypads (modify according to your keypad)
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte rowPins[ROWS] = {R1, R2, R3, R4}; // connect to the row pinouts of the keypad
byte colPins[COLS] = {C1, C2, C3, C4}; // connect to the column pinouts of the keypad
#endif

// Declare globally to access from both setup() and loop()
String key = "";      // Temporary variable to store the pressed key (optional)
String pressedSequence = ""; // String to store the pressed keys
const String targetSequence = "147";  // Target sequence to trigger login success

// Initialize an instance of class Adafruit_Keypad
Adafruit_Keypad customKeypad = Adafruit_Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);  

  customKeypad.begin();

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  // Add a debug print to check connection (optional)
  if (ArduinoCloud.connected()) {
    Serial.println("Connected to Arduino Cloud!");
  } else {
    Serial.println("Connection failed. Check your credentials.");
  }
}

void loop() {
  ArduinoCloud.update();

  // Your code here: This is where you can add functionalities based on successful login or user input
  // For example, send data to the cloud or control other hardware based on pressed keys

  customKeypad.tick();

  while (customKeypad.available()) {
    keypadEvent e = customKeypad.read();
    char key = (char)e.bit.KEY;  // Cast the key value to a char

    if (e.bit.EVENT == KEY_JUST_PRESSED) {
      //Serial.print("You pressed: ");
      Serial.print(key);   // Print the pressed key

      // Check if the pressed key is '#' (login attempt) or '*' (clear sequence)
      if (key == '#') {

        if (pressedSequence == targetSequence) {
          Serial.println("Login Successful!");
          pressedSequence = "";
          // Add your code here for successful login (e.g., send data to cloud)
          // You can access cloud functionalities through ArduinoCloud library functions
        } else {
          Serial.println("Login Failed. Try again.");
          pressedSequence = "";

        }

      } else if (key == '*') {
        pressedSequence = "";
      } else {
        pressedSequence += key;
      }
    }
  }

  delay(100);
}
